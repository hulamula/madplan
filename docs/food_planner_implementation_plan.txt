# üßæ Revised Implementation Plan ‚Äì Food Planner App (No MVVM)

## ‚úÖ 1. Core Logic (Console Version)

### 1.1 MVP Features
- [x] **Add & Save Dishes**  
  Add dishes with name + ingredients and store them in JSON.

- [x] **Test Datasets**  
  Create sample data for testing.

- [x] **Load Dishes from File**  
  Read dish list from JSON.

- [x] **Generate Meal Plan**  
  - Assign dishes to weekdays  
  - Show Danish weekdays  
  - Week starts on Monday  
  - Safety check for empty dish list

- [x] **Generate Shopping List**  
  Collect all ingredients from planned dishes.

- [x] **Save/Load Plans**  
  Save weekly plan + shopping list to disk.

---

## üñºÔ∏è 2. WPF Integration (Code-Behind Approach)

### 2.0 Setup
- [x] **GitHub Repository**  
  Source control + commits.

- [x] **Folder Structure**  
  Separate models, services, and windows.

### 2.1 UI Features (Code-Behind Only)
- [x] **File Selection**  
  Choose JSON source file via ComboBox in `MainWindow`.

- [x] **View Dishes**  
  Show dish list in `RetterWindow`.

- [x] **Add Dish UI**  
  - Open `Tilf√∏jRetWindow` from `RetterWindow`  
  - Input name + ingredients  
  - Save to shared list + file using service  
  - Refresh `RetterListView`

- [ ] **Edit & Delete Dishes**  
  Enable inline editing and removal (planned).

- [ ] **Meal Plan UI**  
  Generate and display a plan via button click.

- [ ] **Shopping List UI**  
  Display list and save option.

### 2.2 Logic Hookups
- [x] Use shared data between windows
- [x] Reuse existing JSON service (`RetFiler`)
- [ ] Add safety + input validation (planned)
- [ ] Improve data feedback (e.g., message on save)

---

## ‚ú® 3. Enhanced Features (Post-MVP)

### 3.1 Flexible Meal Planning
- [ ] Support leftover/eating out/takeaway days
- [ ] Fix specific dishes for given days
- [ ] Skip plan generation for certain weekdays

### 3.2 Smarter Shopping Lists
- [ ] Let user edit/remove list items
- [ ] Allow "always-stocked" ingredients
- [ ] Categorize by supermarket section  
  (_Use 500-item reference list_)

### 3.3 Preferences
- [ ] Mark favorite/starred dishes for more frequent use
- [ ] Store user cooking patterns (days per week, preferred meals)

---

## üõ†Ô∏è 4. Ongoing Improvements
- [ ] Input validation (empty/duplicate names)
- [ ] Performance for larger datasets
- [ ] UI polish and feedback messages
- [ ] Optional: explore MVVM later for better scaling
